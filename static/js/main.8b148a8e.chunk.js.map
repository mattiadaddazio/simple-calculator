{"version":3,"sources":["utils/calculatorUtils.js","components/display.jsx","components/calculatorBody.jsx","components/calculator.jsx","App.js","serviceWorker.js","index.js"],"names":["lastNumberIndex","exp","reduce","lastIndex","symbol","lastIndexOf","hasDecimalPoint","substring","includes","isSymbol","char","isNumber","countOpenBrackets","split","count","translate","replace","calculateFontSize","length","Display","content","partialResult","style","fontSize","readOnly","className","value","wrap","CalculatorBody","props","onAppend","onBrackets","onSignChange","onCalculation","onClear","onDelete","onClick","colSpan","Calculator","state","hasError","isResult","handleKeyPress","key","handleClear","handleDelete","handleCalculation","handleAppend","button","lastChar","charAt","slice","setState","handleBrackets","handleSignChange","newExp","evaluate","toString","error","window","addEventListener","this","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8b148a8e.chunk.js","sourcesContent":["export function lastNumberIndex(exp) {\r\n  return (\r\n    [\"/\", \"*\", \"-\", \"+\", \"^\"].reduce((lastIndex, symbol) => {\r\n      return lastIndex > exp.lastIndexOf(symbol)\r\n        ? lastIndex\r\n        : exp.lastIndexOf(symbol);\r\n    }, -1) + 1\r\n  );\r\n}\r\n\r\nexport function hasDecimalPoint(exp) {\r\n  return exp.substring(lastNumberIndex(exp)).includes(\".\");\r\n}\r\n\r\nexport function isSymbol(char) {\r\n  return \"/*+-^\".includes(char);\r\n}\r\n\r\nexport function isNumber(char) {\r\n  return \"0123456789\".includes(char);\r\n}\r\n\r\nexport function countOpenBrackets(exp) {\r\n  return exp\r\n    .split(\"\")\r\n    .reduce(\r\n      (count, char) =>\r\n        char === \"(\" ? count + 1 : char === \")\" ? count - 1 : count,\r\n      0\r\n    );\r\n}\r\n\r\nexport function translate(exp) {\r\n  return exp.replace(/\\*/g, \"x\").replace(/\\./g, \",\").replace(/\\//g, \"รท\");\r\n}\r\n\r\nexport function calculateFontSize(exp, length) {\r\n  return length > 15 ? \"2.5vh\" : \"4vh\";\r\n}\r\n","import React from \"react\";\r\nimport { translate, calculateFontSize } from \"./../utils/calculatorUtils\";\r\n\r\nconst Display = ({ content, partialResult }) => {\r\n  return (\r\n    <div>\r\n      <textarea\r\n        style={{ fontSize: calculateFontSize(content, content.length) }}\r\n        readOnly\r\n        className=\"display\"\r\n        value={translate(content)}\r\n        wrap=\"off\"\r\n      />\r\n      <p\r\n        style={{\r\n          fontSize: calculateFontSize(partialResult, partialResult.length),\r\n        }}\r\n        className=\"preview\"\r\n      >\r\n        {translate(partialResult)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport { FiDelete } from \"react-icons/fi\";\r\nimport { TiPlus, TiMinus, TiDivide, TiTimes, TiEquals } from \"react-icons/ti\";\r\n\r\nconst CalculatorBody = (props) => {\r\n  const {\r\n    onAppend,\r\n    onBrackets,\r\n    onSignChange,\r\n    onCalculation,\r\n    onClear,\r\n    onDelete,\r\n  } = props;\r\n  return (\r\n    <table className=\"calculatorBody\">\r\n      <thead>\r\n        <tr className=\"menu\">\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td className=\"delete\">\r\n            <FiDelete className=\"clickable\" onClick={onDelete} />\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td colSpan=\"4\">\r\n            <hr />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <button className=\"functional font-weight-bold\" onClick={onClear}>\r\n              C\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button\r\n              className=\"functional font-weight-bold\"\r\n              onClick={onBrackets}\r\n            >\r\n              ( )\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button\r\n              className=\"functional font-weight-bold\"\r\n              onClick={() => onAppend(\"^\")}\r\n            >\r\n              ^\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button className=\"functional pb-1\" onClick={() => onAppend(\"/\")}>\r\n              <TiDivide />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <button onClick={() => onAppend(\"7\")}>7</button>\r\n          </td>\r\n          <td>\r\n            <button onClick={() => onAppend(\"8\")}>8</button>\r\n          </td>\r\n          <td>\r\n            <button onClick={() => onAppend(\"9\")}>9</button>\r\n          </td>\r\n          <td>\r\n            <button className=\"functional pb-1\" onClick={() => onAppend(\"*\")}>\r\n              <TiTimes />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <button onClick={() => onAppend(\"4\")}>4</button>\r\n          </td>\r\n          <td>\r\n            <button onClick={() => onAppend(\"5\")}>5</button>\r\n          </td>\r\n          <td>\r\n            <button onClick={() => onAppend(\"6\")}>6</button>\r\n          </td>\r\n          <td>\r\n            <button className=\"functional pb-1\" onClick={() => onAppend(\"-\")}>\r\n              <TiMinus />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <button onClick={() => onAppend(\"1\")}>1</button>\r\n          </td>\r\n          <td>\r\n            <button onClick={() => onAppend(\"2\")}>2</button>\r\n          </td>\r\n          <td>\r\n            <button onClick={() => onAppend(\"3\")}>3</button>\r\n          </td>\r\n          <td>\r\n            <button className=\"functional pb-1\" onClick={() => onAppend(\"+\")}>\r\n              <TiPlus />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <button\r\n              className=\"functional font-weight-bold\"\r\n              onClick={onSignChange}\r\n            >\r\n              +/-\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button onClick={() => onAppend(\"0\")}>0</button>\r\n          </td>\r\n          <td>\r\n            <button\r\n              className=\"functional font-weight-bold\"\r\n              onClick={() => onAppend(\".\")}\r\n            >\r\n              ,\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button className=\"result pb-1\" onClick={onCalculation}>\r\n              <TiEquals />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CalculatorBody;\r\n","import React, { Component } from \"react\";\r\nimport Display from \"./display\";\r\nimport CalculatorBody from \"./calculatorBody\";\r\nimport { evaluate } from \"mathjs\";\r\nimport {\r\n  lastNumberIndex,\r\n  hasDecimalPoint,\r\n  isSymbol,\r\n  isNumber,\r\n  countOpenBrackets,\r\n} from \"../utils/calculatorUtils\";\r\n\r\nclass Calculator extends Component {\r\n  state = {\r\n    exp: \"\",\r\n    hasError: false,\r\n    isResult: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = ({ key }) => {\r\n    if (key === \"c\") this.handleClear();\r\n    else if (key === \"Backspace\") this.handleDelete();\r\n    else if (key === \"Enter\") this.handleCalculation();\r\n    else if (\"1234567890,+-/*^\".includes(key)) this.handleAppend(key);\r\n  };\r\n\r\n  handleAppend = (button) => {\r\n    let { exp } = this.state;\r\n\r\n    if (button === \".\" && hasDecimalPoint(exp)) return;\r\n    if ((!exp || exp === \"-\") && \"+*/^\".includes(button)) return;\r\n\r\n    const lastChar = exp.charAt(exp.length - 1);\r\n    if (isSymbol(button) && isSymbol(lastChar)) exp = exp.slice(0, -1);\r\n\r\n    if (this.state.isResult && isNumber(button))\r\n      return this.setState({ exp: button, hasError: false, isResult: false });\r\n\r\n    this.setState({ exp: exp + button, hasError: false, isResult: false });\r\n  };\r\n\r\n  handleBrackets = () => {\r\n    let { exp } = this.state;\r\n    let lastChar = exp[exp.length - 1];\r\n\r\n    if (lastChar === \".\") return;\r\n    else if (!exp || lastChar === \"(\" || isSymbol(lastChar)) exp += \"(\";\r\n    else if (lastChar === \")\" && countOpenBrackets(exp) > 0) exp += \")\";\r\n    else if (countOpenBrackets(exp) === 0) exp += \"*(\";\r\n    else exp += \")\";\r\n\r\n    this.setState({ exp, hasError: false, isResult: false });\r\n  };\r\n\r\n  handleSignChange = () => {\r\n    const { exp } = this.state;\r\n\r\n    if (!exp || lastNumberIndex(exp) > 1) return;\r\n\r\n    const newExp = exp[0] === \"-\" ? exp.slice(1) : `-${exp}`;\r\n    this.setState({ exp: newExp, hasError: false, isResult: false });\r\n  };\r\n\r\n  handleCalculation = () => {\r\n    try {\r\n      this.setState({\r\n        exp: evaluate(this.state.exp).toString(),\r\n        isResult: true,\r\n      });\r\n    } catch (error) {\r\n      return this.setState({ hasError: true });\r\n    }\r\n  };\r\n\r\n  partialResult = () => {\r\n    try {\r\n      const partialResult = evaluate(this.state.exp).toString();\r\n      return partialResult.includes(\"e\") && this.state.isResult\r\n        ? \"\"\r\n        : partialResult;\r\n    } catch (error) {\r\n      return this.state.hasError ? \"Invalid syntax\" : \"\";\r\n    }\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.setState({ exp: \"\", hasError: false, isResult: false });\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.setState({\r\n      exp: this.state.exp.slice(0, -1),\r\n      hasError: false,\r\n      isResult: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { exp } = this.state;\r\n\r\n    return (\r\n      <main className=\"calculator\">\r\n        <Display\r\n          content={exp}\r\n          partialResult={lastNumberIndex(exp) > 0 ? this.partialResult() : \"\"}\r\n        />\r\n        <CalculatorBody\r\n          onAppend={this.handleAppend}\r\n          onBrackets={this.handleBrackets}\r\n          onSignChange={this.handleSignChange}\r\n          onCalculation={this.handleCalculation}\r\n          onClear={this.handleClear}\r\n          onDelete={this.handleDelete}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/calculator\";\n\nfunction App() {\n  return <Calculator />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}